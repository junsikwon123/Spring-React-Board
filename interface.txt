signIn (로그인)

-request
{
    *email: String,
    *password: String,

}

-response

성공
Http Status: 200(OK)
{
    code:"SU",
    massage:"Susses",
    token: "jwt...",
    expireDate:123456789
}

실패

 필수 정보 미입력

Http Status - 401(Unauthorized)//인증실패
{
    code:"SF",
    message:"Sign In Failed."
}

Http status - 500(Internal Server Error)//서버에러
{
    code:"DE",
    message:"Database Error"
}
================================================================
signup (회원가입)

-request
{
    *email: String,
    *password: String,
    *nickname: String,
    *telNumber: String,
    *address: String,
    addressDetail: String,
}

- response

성공
Http Status - 200(OK)
{
    code:"SU",
    massage:"Susses",
}

실패

- 필수 정보 미입력 / 이메일 포멧불일치 / 비밀번호 8자리 미만 / 전화번호 포멧 불일치 /

-이메일 중복
Http Status - 400 (Bad Request)
{
    code:"EE",
    message:"Existed Error"
}

-데이터베이스 에러
Http Status - 500(Internal Server Error)
{
    code: "DE",
    message: "Database Error"
}

================================================================

weeklyTop3List (주간 상위 3 게시물 리스트)

-response

성공
{
    code:"SU",
    massage:"Susses",
    top3List: boardListItem[]
}

boardListItem
{
    boardNumber:int,
    title: String,
    content: String,
    boardTitleImage: String,
    favoriteCount: int,
    commentCount: int,
    viewCount: int,
    writeDatetime: String,
    writerNickname: String,
    writerProfileImage: String,
}

실패

-데이터베이스 에러
Http Status - 500(Internal Server Error)
{
    code: "DE",
    message: "Database Error"
}

================================================================

currentList (최신 게시물 리스트)

성공
{
    code:"SU",
    massage:"Susses",
    top3List: boardListItem[]
}

boardListItem
{
    boardNumber:int,
    title: String,
    content: String,
    boardTitleImage: String,
    favoriteCount: int,
    commentCount: int,
    viewCount: int,
    writeDatetime: String,
    writerNickname: String,
    writerProfileImage: String,
}

실패

-데이터베이스 에러
Http Status - 500(Internal Server Error)
{
    code: "DE",
    message: "Database Error"
}

================================================================

popularWordList (인기 검색어 리스트)

-response

성공

Http Status - 200(OK)
{
    code: "SU",
    message: "Success.",
    popularWordList : String[]
}

실패

-데이터베이스 에러
Http Status - 500(Internal Server Error)
{
    code: "DE",
    message: "Database Error"
}


================================================================

relativeWordList (관련 검색어 리스트)

성공

Http Status - 200(OK)
{
    code: "SU",
    message: "Success.",
    relativeWordList : String[]
}

실패

-데이터베이스 에러
Http Status - 500(Internal Server Error)
{
    code: "DE",
    message: "Database Error"
}
================================================================

boardDetail (게시물 상세)

response

성공

Http Status - 200(OK)
{
    code: "SU",
    message: "Success.",
    relativeWordList : String[]
    boardNumber:int,
    title: String,
    content: String,
    boardTitleImage: String,
    writeEmail: String,
    writerNickname: String,
    writerProfileImage: String,
}

실패

-데이터베이스 에러

Http Status - 500(bad Request)
{
    code: "DE",
    message: "No Existed Board Number"
}
================================================================

favoriteList(좋아요 리스트)

- response

성공

Http Status - 200(OK)
{
    code: "SU",
    message: "Success.",
    relativeWordList : String[]
}

FavoriteListItem
{
    eamil:String,
    nickname: String,
    profileImageUrl: String
}

실패

-데이터베이스 에러

Http Status - 500(Internal Server Error)
{
    code: "DE",
    message: "Database Error"
}

================================================================

putFavorite (좋아요 가능)

-request

{
    boardNumber: int,

}
성공

Http Status - 200(OK)
{
    code: "SU",
    message: "Success.",
}

실패

-데이터베이스 에러

Http Status - 500(Internal Server Error)
{
    code: "DE",
    message: "Database Error"
}


================================================================

commentList(댓글 리스트)

성공

Http Status - 200(OK)
{
    code: "SU",
    message: "Success.",
    commentList: commentListItem[]
}

commentListItem
{
    email: string,
    nickname: string,
    writeDatetime : String,
    content: String
}
실패

-데이터베이스 에러

Http Status - 500(Internal Server Error)
{
    code: "DE",
    message: "Database Error"
}

================================================================

postComment (댓글 쓰기)

-request
{
    content: String,
}

실패

-존재하지 않는 게시물

Http Status - 400(Bad Request)
{
    code: " NB",
    message: "no Existed Board"
}

-존재하지 않는 유저

Http Status - 400(Bad Request)
{
    code: " NU",
    message: "no Existed User"
}

-데이터베이스 에러

Http Status - 500(Internal Server Error)
{
    code: "DE",
    message: "Database Error"
}
================================================================

borardDelete(게시물 삭제)

실패

-존재하지 않는 게시물

Http Status - 400(Bad Request)
{
    code: " NB",
    message: "no Existed Board"
}

-존재하지 않는 유저

Http Status - 400(Bad Request)
{
    code: " NU",
    message: "no Existed User"
}

- 권한없음

Http status - 403(Forbidden)
{
    code: " NP",
    message: "no Permission"
}

-데이터베이스 에러

Http Status - 500(Internal Server Error)
{
    code: "DE",
    message: "Database Error"
}
================================================================

boardwrite (게시물 쓰기)

성공
-request
{
    *title:string,
    *content: String,
    boardImageList: String[]
}

실패

-response

-존재하지 않는 유저

Http Status - 400(Bad Request)
{
    code: " NU",
    message: "no Existed User"
}

- 권한없음

Http status - 403(Forbidden)
{
    code: " NP",
    message: "no Permission"
}

-데이터베이스 에러

Http Status - 500(Internal Server Error)
{
    code: "DE",
    message: "Database Error"
}
================================================================

boardUpdate(게시물 수정)

성공
-request

{
    *title:string,
    *content: String,
    boardImageList: String[]
}

-response

실패 

-존재하지 않는 게시물

Http Status - 400(Bad Request)
{
    code: " NB",
    message: "no Existed Board"
}

-존재하지 않는 유저

Http Status - 400(Bad Request)
{
    code: " NU",
    message: "no Existed User"
}

- 권한없음

Http status - 403(Forbidden)
{
    code: " NP",
    message: "no Permission"
}

-데이터베이스 에러

Http Status - 500(Internal Server Error)
{
    code: "DE",
    message: "Database Error"
}
================================================================

getUser(유져 정보)

-response

성공

성공
{
    code:"SU",
    massage:"Susses",
    email: String,
    nickname: String,
    profileImage: String
}

실패

-존재하지 않는 유저

Http Status - 400(Bad Request)
{
    code: " NU",
    message: "no Existed User"
}

-데이터베이스 에러

Http Status - 500(Internal Server Error)
{
    code: "DE",
    message: "Database Error"
}

================================================================

userBoardList(특정 유져 게시물 리스트)

성공
{
    code:"SU",
    massage:"Susses",
    top3List: boardListItem[]
}

boardListItem
{
    boardNumber:int,
    title: String,
    content: String,
    boardTitleImage: String,
    favoriteCount: int,
    commentCount: int,
    viewCount: int,
    writeDatetime: String,
    writerNickname: String,
    writerProfileImage: String,
}

실패

-데이터베이스 에러
Http Status - 500(Internal Server Error)
{
    code: "DE",
    message: "Database Error"
}

================================================================

searchList (검색 게시물 리스트)

성공
{
    code:"SU",
    massage:"Susses",
    top3List: boardListItem[]
}

boardListItem
{
    boardNumber:int,
    title: String,
    content: String,
    boardTitleImage: String,
    favoriteCount: int,
    commentCount: int,
    viewCount: int,
    writeDatetime: String,
    writerNickname: String,
    writerProfileImage: String,
}

실패

-데이터베이스 에러
Http Status - 500(Internal Server Error)
{
    code: "DE",
    message: "Database Error"
}

================================================================

patchNickname (닉네임 수정)

-request
{
    nickname: String
}

성공
{
    code:"SU",
    massage:"Susses",
}

실패

-존재하지 않는 유저

Http Status - 400(Bad Request)
{
    code: " NU",
    message: "no Existed User"
}

-데이터베이스 에러
Http Status - 500(Internal Server Error)
{
    code: "DE",
    message: "Database Error"
}

================================================================

fileUpload (파일 업로드)

================================================================

getFile (파일 불러오기)

